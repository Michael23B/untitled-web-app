@model IEnumerable<Web.Models.ViewModels.Store.CategoryViewModel>

@{
                /**/

                ViewBag.Title = "Categories";
}

@if (TempData["message"] != null)
{
    <div class="alert alert-success">@TempData["message"]</div>
}

<h2>Categories</h2>

<div class="new-cat">
    <input type="text" id="newcatname" class="form-control" />
    <p>
        <a href="#" id="newcata" class="btn btn-success btn-outline" style="margin-top: 10px">Add Category</a>
        <span class="ajax-text">
            <img src="~/Content/img/loading.gif" />
        </span>
    </p>
</div>

<br />

@if (!Model.Any())
{
    <h1 class="alert alert-warning text-center">There are no categories :(</h1>
}
else
{
    <table class="table sorting categories" id="pages">
        <tr class="home"></tr>

        @foreach (var item in Model)
        {
            <tr id="Id_@item.Id">
                <td>
                    <div class="ajaxdivtd"></div>
                    @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "yes" } })
                <td>
                    @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "delete btn btn-danger btn-outline" })
                </td>
            </tr>
        }

    </table>
    <code>Drag to reorder categories sir. Also you can <kbd>double-click</kbd> category names to rename them</code>
}

@section Scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js">
    </script>

    <script>
        $(function () {

            //Add a new category

            var newCatA = $("a#newcata");
            var newCatTextInput = $("#newcatname");
            var ajaxText = $("span.ajax-text");
            var table = $("table#pages tbody");

            //if someone is typing in category text input and clicks enter, register a click
            newCatTextInput.keyup(function (e) {
                if (e.keyCode === 13) { //13 == enter
                    newCatA.click();
                }
            });

            newCatA.click(function (e) {
                e.preventDefault();

                var catName = newCatTextInput.val();

                if (catName.length < 2) {
                    alert("Category name must be at least 2 characters!");
                    return false;
                }

                ajaxText.show();

                var url = "/Admin/Store/AddNewCategory";
                console.log(url);
                $.post(url,
                    { catName: catName },
                    function (data) {
                        var response = data.trim();

                        //fail response = titletaken
                        if (response === "titletaken") {
                            ajaxText.html("<span class='alert alert-danger'>That title/slug is taken!</span>");
                            setTimeout(function () {
                                ajaxText.fadeOut("fast",
                                    function () {
                                        ajaxText.html("<img src='/Content/img/loading.gif' />");
                                    });
                            },
                                2000);
                            return false;
                        } else {
                            if (!$("table#pages").length) {
                                location.reload();
                            } else {
                                ajaxText.html("<span class='alert alert-success'>That category has been added!</span>");
                                setTimeout(function () {
                                    ajaxText.fadeOut("fast",
                                        function () {
                                            ajaxText.html("<img src='/Content/img/loading.gif' />");
                                        });
                                },
                                    2000);
                                newCatTextInput.val("");

                                var toAppend = $("table#pages tbody tr:last").clone();
                                toAppend.attr("id", "id_" + data);
                                toAppend.find("#item_Name").val(catName);

                                //we return the id of the category as a string once it has been put in the database
                                toAppend.find("a.delete").attr("href", "/Admin/Store/DeleteCategory/" + data);

                                table.append(toAppend);
                                table.sortable("refresh");
                            }
                        }
                    });
            });

            //Sort categories
            $("table#pages tbody").sortable({
                items: "tr:not(.home)",
                placeholder: "ui-state-highlight",
                update: function () {
                    var ids = $("table#pages tbody").sortable("serialize");
                    var url = "/Admin/Store/ReorderCategories";

                    $.post(url, ids, function (data) { });
                }
            });
        });

        //Confirm delete category
        $("body").on("click",
            "a.delete",
            function () {
                if (!confirm("Are you sure you want to delete this category?")) return false;
            });

        //Bug: new categories added can't be edited until the page is refreshed
        //rename category

        var originalTextBoxValue;

        //on double click, get our original value in case something goes wrong then set the field to be editable
        $("table#pages input.text-box").dblclick(function () {
            originalTextBoxValue = $(this).val();
            $(this).attr("readonly", false);
        });

        $("table#pages input.text-box").keyup(function (e) {
            if (e.keyCode === 13) { //enter = 13
                $(this).blur();
            }
        });

        $("table#pages input.text-box").blur(function () {
            //we need access to the text box later
            var $this = $(this);

            //find the div with our custom class within the parent of the td
            var ajaxdiv = $this.parent().find(".ajaxdivtd");

            //category name from the text box
            var newCatName = $this.val();

            //the id is stored in the row and starts with 'id_' so we substring to chop that off
            var id = $this.parent().parent().attr("id").substring(3);
            var url = "/Admin/Store/RenameCategory/";

            if (newCatName.length < 2) {
                alert("Category name must be at least 2 characters!");
                $this.attr("readonly", true);
                $this.val(originalTextBoxValue);
                return false;
            }

            $.post(url,
                { newCatName: newCatName, id: id },
                function (data) {
                    var response = data.trim();

                    if (response === "titletaken") {
                        $this.val(originalTextBoxValue);
                        ajaxdiv.html("<span class='alert alert-danger'>That title/slug is taken!</span>").show();
                    } else {
                        ajaxdiv.html("<span class='alert alert-success'>That category name has been changed!</span>")
                            .show();
                    }

                    setTimeout(function () {
                        ajaxdiv.fadeOut("fast",
                            function () {
                                ajaxdiv.html("");
                            });
                    },
                        2000);
                }).done(function () {
                    $this.attr("readonly", true);
                });
        });
    </script>
}