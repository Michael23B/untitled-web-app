@model Web.Models.ViewModels.Store.ProductViewModel

@{
    ViewBag.Title = "Edit Product";
}

@if (TempData["message"] != null)
{
    <div class="alert alert-success">@TempData["message"]</div>
}
@if (TempData["warning"] != null)
{
    <div class="alert alert-warning">@TempData["warning"]</div>
}

<h2>Edit Product</h2>

<style>
    input#ImageName {
        display: none;
    }
</style>

@using (Html.BeginForm("EditProduct", "Store", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>
            &hearts;~Soothing sounds..
            <audio controls="controls">
                <source src="~/Content/The%20Big%20Bang%20Theory%20but%20all%20the%20Laughs%20are%20Replaced%20with%20Loud%20Screaming.mp3" type="audio/mpeg" />
            </audio>
            ...while you work &hearts;
        </h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <img src="/Images/Uploads/Products/@Model.Id/Thumbs/@Model.ImageName" />
                <br /><br />
                <img id="imgpreview" src="#" />
                <br /><br />
                <input type="file" name="file" id="ImageUpload" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success btn-outline" />
            </div>
        </div>
    </div>
}

<hr />
@if (!Model.GalleryImages.Any())
{
    <h3 class="alert alert-info text-center">No gallery images for this product.</h3>
}
else
{
    <h3 class="">Gallery Images:</h3>
}

@foreach (var image in Model.GalleryImages)
{
    <div style="display: inline-block;margin-right: 10px">
        <img src="/Images/Uploads/Products/@Model.Id/Gallery/Thumbs/@image" alt="Gallery image for @Model.Name" />
        @Html.ActionLink("Delete", "DeleteImage", "Store", null, new { @class = "deleteimage btn btn-danger btn-outline", data_name = image })
    </div>
}

<hr />

@using (Html.BeginForm("SaveGalleryImages", "Store", FormMethod.Post, new { @class = "dropzone", id = "dropzoneForm", @enctype = "multipart/form-data" }))
{
    <div class="fallback">
        <input type="file" name="file" multiple />
        <input type="submit" value="Upload" />
    </div>
}

<br />

<div>
    @Html.ActionLink("Back to Products", "Products", null, new { @class = "btn btn-primary btn-outline" })
</div>

<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />

@section Scripts {
    <script src="~/Scripts/dropzone/dropzone.js"></script>

    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script>
        $(function() {
            //Preview selected image
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview").attr("src", e.target.result).width(200).height(200);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#ImageUpload").change(function() {
                readURL(this);
            });

            //Dropzone scripts
            Dropzone.options.dropzoneForm = {
                acceptedFiles: "image/*",
                init: function() {
                    this.on("complete",
                        function(file) {
                            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                                location.reload();
                            }
                        });
                    this.on("sending",
                        function(file, xhr, formData) {
                            formData.append("id", @Model.Id);
                        });
                }
            }

            //Delete gallery images
            $("a.deleteimage").click(function(e) {
                e.preventDefault();

                if (!confirm("Confirm deletion")) return false;

                var $this = $(this);
                var url = "/Admin/Store/DeleteImage";
                var imageName = $this.data("name");

                $.post(url,
                    { id: @Model.Id, imageName: imageName },
                    function(data) {
                        $this.parent().fadeOut("fast");
                    });
            });
        });
    </script>
}